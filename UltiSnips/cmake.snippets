
snippet cmake "init cmake" b
CMAKE_MINIMUM_REQUIRED(VERSION 3.0)
PROJECT(${1:ProjectName})

FIND_PACKAGE(${2:LIBRARY})

INCLUDE_DIRECTORIES(
	${$2_INCLUDE_DIR}
)

ADD_SUBDIRECTORY(${0:src})

ADD_EXECUTABLE($1)

TARGET_LINK_LIBRARIES($1
	${$2_LIBRARIES}
)

endsnippet

snippet include "List of preprocessor include file search directories" b
INCLUDE_DIRECTORIES(
	${${0:INCLUDE_DIR}}
)
endsnippet

snippet find "Finds and loads settings from an external project" b
	FIND_PACKAGE(${0:LIBRARY})
endsnippet

snippet glob
FILE(GLOB ${1:SRCS} *.${0:cpp})
endsnippet

snippet subdir
ADD_SUBDIRECTORY(${0:src})
endsnippet

snippet lib
ADD_LIBRARY(${1:lib} ${2:STATIC}
	${${0:SRCS}}
)
endsnippet

snippet link
TARGET_LINK_LIBRARIES(${1:bin}
	${0:somelib}
)
endsnippet

snippet bin
ADD_EXECUTABLE(${1:bin})
endsnippet

snippet set
SET(${1:var} ${0:val})
endsnippet

snippet dep
ADD_DEPENDENCIES(${1:target}
	${0:dep}
)
endsnippet

snippet props "set target properties" b
SET_TARGET_PROPERTIES(${1:target}
	${2:PROPERTIES} ${3:COMPILE_FLAGS}
	${0:"-O3 -Wall -pedantic"}
)
endsnippet

snippet version "minimum need version" b
CMAKE_MINIMUM_REQUIRED(VERSION ${1:3.0})
endsnippet

snippet enableTest "enable Test" b
ENABLE_TESTING()
endsnippet

snippet addTest "add test" b
ADD_TEST(NAME $1 COMMAND $2)
endsnippet

snippet removeItem "remoteItem from list" b
LIST(REMOVE_ITEM ${1:list} ${2:v})
endsnippet

snippet objs "target_objects:lib"
$<TARGET_OBJECTS:${1:name}>
endsnippet

snippet target "add a new custom target" b
add_custom_target(${1:NAME}
	COMMAND $2)
endsnippet

snippet msg "show a message" b
MESSAGE(${1:STATUS} $0)
endsnippet


snippet if "if statement" b
IF ( $1 )
	$0
ENDIF ()
endsnippet

snippet setprop "set property" b
SET_PROPERTY(
${1:TARGET} $2
PROPERTY ${3:name} ${4:v}
)
endsnippet
