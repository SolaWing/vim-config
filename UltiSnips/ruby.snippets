snippet #! "#! header " b
#!/usr/bin/env ruby

$0
endsnippet

snippet seperator "seperator description" b
########## $0
endsnippet

snippet fixme "fixme" b
# FIXME: $0
endsnippet

snippet r "require" b
require '$0'
endsnippet

snippet if "if statement"
if $1
	$0
end
endsnippet

# ruby uggly elseif statement
snippet elseif "else if statement"
elsif $1
	$0
endsnippet

snippet unless "unless statement"
unless $1
	$0
end
endsnippet

snippet case "case statement"
case $1
when $2 then $3
else $0
end
endsnippet

snippet for "for loop"
for ${1:i} in ${2:0...9} do
	$0
end
endsnippet

snippet do "do end block"
do
	$0
end
endsnippet

snippet do/ "do |param| end block" A
do |$1|
	$0
end
endsnippet

snippet l "lambda"
lambda do
	$0
end
endsnippet

snippet ar "attr_reader" b
attr_reader
endsnippet

snippet a "attr_accessor" b
attr_accessor
endsnippet

snippet b "breakpoint" b
binding.pry
endsnippet

snippet rubocop "disable rubocop rules" b
# rubocop:disable $1
$0${VISUAL}
# rubocop:enable $1
endsnippet

snippet rubocop-this "disable rubocop rules"
# rubocop:disable $1
endsnippet

######################################## rspec
snippet expect "expect assert" b
expect($1).to ${2:eq} $3
endsnippet

snippet context "context group" b
context '$1' do
	$0
end
endsnippet

######################################## solargraph
snippet ## "document template" b
# ${1:description}
#
# @return [${2:String}]
endsnippet

snippet param "param document"
@param ${1:name} [${2:String}]$0
endsnippet

snippet attr_doc "attribute document"
@!attribute [rw] ${1:name}
#   @return [${2:String}] ${3:desc}
endsnippet

snippet hint "type hint for following var" b
# @type [${1:String}]
endsnippet

snippet domain "domain modify" b
# @!domain ${1:Object}
endsnippet

snippet nocov "simplecov: no cov hint" b
# :nocov:
${VISUAL}$0
# :nocov:
endsnippet

snippet do-while "a do while block"
loop do
	$0
	break unless $1
end
endsnippet
