################### general #####################

snippet __attribute__ "__attribute__ declaration"
__attribute__(($0))
endsnippet

snippet t "todo" b
// TODO: $0
endsnippet

snippet disableWarning "disableWarning" b
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-W${1:all}"
endsnippet

snippet enableWarning "enableWarning" b
#pragma clang diagnostic pop
endsnippet

snippet /* "Block Comment" b
/** $1
 *
 *  $0
 */
endsnippet

snippet /** "inline Comment" b
/** $1 */
endsnippet

snippet --- "seperator Comment" b
/************************ $1 **************************/
endsnippet

snippet *** "seperator Comment" b
/************************ $1 **************************/
endsnippet

snippet todo "a TODO comment" b
// ${0:TODO}: ${1:Content}
endsnippet

snippet fixme "a FIXME comment" b
// ${0:FIXME}: ${1:Content}
endsnippet

################## snip ######################

snippet for "for loop (for)"
for (${2:i} = 0; ${2/.*\s+//} < ${1:count}; ${3:++${2/.*\s+//}}) {
	${VISUAL}${0}
}
endsnippet

snippet if "if statement" b
if ( ${1} ) {
	${VISUAL}$0
}
endsnippet

snippet do "do while block" b
do {
	${VISUAL}$0
} while( ${1:true} );
endsnippet

snippet wh "while block" b
while( ${1:true} ) {
	${VISUAL}$0
}
endsnippet

snippet retif "ret if true" b
if ( ${1} ) { return$0; }
endsnippet

snippet breakif "if true break" b
if ( ${1} ) { break; }
endsnippet

snippet switch "switch statement" b
switch( $1 ){
	case ${2:0}: {
		$3
	} break;
	default: {
		$0
	} break;
}
endsnippet

snippet case "break-case" b
case $1: {
	$0
} break;
endsnippet

snippet va "__VA_ARGS__"
__VA_ARGS__
endsnippet

snippet #if "#if directive" b
#if $1
	$0
#endif
endsnippet

snippet ifdefine "if define symbol, execute code" b
#if defined(${1:DEBUG}) && $1 != 0
	${VISUAL}$0
#endif
endsnippet

snippet redef "undef and define" b
#undef $1
#define $1
endsnippet

snippet inc "#include" b
#include "$0"
endsnippet

snippet Inc "#include" b
#include <$0>
endsnippet
