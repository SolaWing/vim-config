snippet module "module definition" w
(module `!p
v = path.rfind("fnl/")
if v != -1 and path.endswith(".fnl"):
  snip.rv = path[(v+4):-4].replace("/", ".")
`
	{$1})
endsnippet

snippet f "function definition"
(defn $1 [$2]
	$0)
endsnippet

snippet l "lambda definition"
(Î» [$1] $0)
endsnippet

snippet each "each loop"
(each [k v (pairs ${1:table})]
	$0)
endsnippet

snippet let "let binding"
(let [$1 $2]
	$0)
endsnippet

snippet collect "collect comprehension"
(collect [k v (pairs ${1:tbl})]
	${0:k v})
endsnippet

snippet macrodebug "description"
macrodebug
endsnippet
