snippet foreach "range-for" b
for (auto&& ${1:obj} : ${2:container}){
	${VISUAL}$0
}
endsnippet

snippet using "using namespace" b
using namespace ${1:std};
endsnippet

snippet static_cast "static_cast"
static_cast<${1:T}>(${2:${VISUAL}})
endsnippet

snippet forit "for iter loop" b
for (auto it = ${1:s}.${2:c}begin(), e = $1.$2end(); it != e; ++it) {
	$0
}
endsnippet

snippet try "try catch" b
try {
	${VISUAL}$0
} catch (const ${1:std::exception} &${2:e}) {
	// TODO: exception
}

endsnippet

snippet externc "extern c block declare" b
#ifdef __cplusplus
extern "C" {
#endif
${VISUAL}$0
#ifdef __cplusplus
}
#endif
endsnippet
